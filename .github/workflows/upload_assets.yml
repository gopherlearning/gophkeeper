on:
  push:
    tags:
      - 'v*'

name: Upload release assets after tagging
jobs:
  build:
    name: create assets
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-image:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    name: create docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build Docker image
        run: |
          GIT_COMMIT=$(git rev-list -1 HEAD) \
          BUILD_TIMESTAMP=$(date '+%Y-%m-%dT%H:%M:%S') \
          VERSION="$(git describe --tags --always --abbrev=0 --match='v[0-9]*.[0-9]*.[0-9]*' 2> /dev/null | sed 's/^.//')" \
          docker build --build-arg "BUILD_VERSION=$VERSION" --build-arg "BUILD_DATE=$BUILD_TIMESTAMP" --build-arg "BUILD_COMMIT=$GIT_COMMIT" --tag ${IMAGE_NAME} .
      - name: push Docker image
        run: |
          TAG=$(git describe --tags)
          docker tag ${IMAGE_NAME} ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}
          docker tag ${IMAGE_NAME} ${REGISTRY}/${IMAGE_NAME}:${TAG}
          docker tag ${IMAGE_NAME} ${REGISTRY}/${IMAGE_NAME}:latest
          docker push ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}
          docker push ${REGISTRY}/${IMAGE_NAME}:${TAG}
          docker push ${REGISTRY}/${IMAGE_NAME}:latest
